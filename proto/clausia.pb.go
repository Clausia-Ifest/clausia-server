// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v5.29.3
// source: clausia.proto

package clausiapb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileContent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileContent) Reset() {
	*x = FileContent{}
	mi := &file_clausia_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileContent) ProtoMessage() {}

func (x *FileContent) ProtoReflect() protoreflect.Message {
	mi := &file_clausia_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileContent.ProtoReflect.Descriptor instead.
func (*FileContent) Descriptor() ([]byte, []int) {
	return file_clausia_proto_rawDescGZIP(), []int{0}
}

func (x *FileContent) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FileContent) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type S3Reference struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjectKey     string                 `protobuf:"bytes,1,opt,name=object_key,json=objectKey,proto3" json:"object_key,omitempty"` // hash/key untuk object di S3
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S3Reference) Reset() {
	*x = S3Reference{}
	mi := &file_clausia_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S3Reference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3Reference) ProtoMessage() {}

func (x *S3Reference) ProtoReflect() protoreflect.Message {
	mi := &file_clausia_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3Reference.ProtoReflect.Descriptor instead.
func (*S3Reference) Descriptor() ([]byte, []int) {
	return file_clausia_proto_rawDescGZIP(), []int{1}
}

func (x *S3Reference) GetObjectKey() string {
	if x != nil {
		return x.ObjectKey
	}
	return ""
}

type OCRParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lang          string                 `protobuf:"bytes,1,opt,name=lang,proto3" json:"lang,omitempty"`                          // e.g., "ind" or "eng"
	Dpi           int32                  `protobuf:"varint,2,opt,name=dpi,proto3" json:"dpi,omitempty"`                           // e.g., 220
	Oem           int32                  `protobuf:"varint,3,opt,name=oem,proto3" json:"oem,omitempty"`                           // 1
	Psm           int32                  `protobuf:"varint,4,opt,name=psm,proto3" json:"psm,omitempty"`                           // 6
	MaxPages      int32                  `protobuf:"varint,5,opt,name=max_pages,json=maxPages,proto3" json:"max_pages,omitempty"` // 0 means unlimited
	Parallel      bool                   `protobuf:"varint,6,opt,name=parallel,proto3" json:"parallel,omitempty"`                 // true
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OCRParams) Reset() {
	*x = OCRParams{}
	mi := &file_clausia_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCRParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCRParams) ProtoMessage() {}

func (x *OCRParams) ProtoReflect() protoreflect.Message {
	mi := &file_clausia_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCRParams.ProtoReflect.Descriptor instead.
func (*OCRParams) Descriptor() ([]byte, []int) {
	return file_clausia_proto_rawDescGZIP(), []int{2}
}

func (x *OCRParams) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *OCRParams) GetDpi() int32 {
	if x != nil {
		return x.Dpi
	}
	return 0
}

func (x *OCRParams) GetOem() int32 {
	if x != nil {
		return x.Oem
	}
	return 0
}

func (x *OCRParams) GetPsm() int32 {
	if x != nil {
		return x.Psm
	}
	return 0
}

func (x *OCRParams) GetMaxPages() int32 {
	if x != nil {
		return x.MaxPages
	}
	return 0
}

func (x *OCRParams) GetParallel() bool {
	if x != nil {
		return x.Parallel
	}
	return false
}

type ExtractRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Source:
	//
	//	*ExtractRequest_File
	//	*ExtractRequest_S3Ref
	Source        isExtractRequest_Source `protobuf_oneof:"source"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtractRequest) Reset() {
	*x = ExtractRequest{}
	mi := &file_clausia_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractRequest) ProtoMessage() {}

func (x *ExtractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clausia_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractRequest.ProtoReflect.Descriptor instead.
func (*ExtractRequest) Descriptor() ([]byte, []int) {
	return file_clausia_proto_rawDescGZIP(), []int{3}
}

func (x *ExtractRequest) GetSource() isExtractRequest_Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *ExtractRequest) GetFile() *FileContent {
	if x != nil {
		if x, ok := x.Source.(*ExtractRequest_File); ok {
			return x.File
		}
	}
	return nil
}

func (x *ExtractRequest) GetS3Ref() *S3Reference {
	if x != nil {
		if x, ok := x.Source.(*ExtractRequest_S3Ref); ok {
			return x.S3Ref
		}
	}
	return nil
}

type isExtractRequest_Source interface {
	isExtractRequest_Source()
}

type ExtractRequest_File struct {
	File *FileContent `protobuf:"bytes,1,opt,name=file,proto3,oneof"` // direct file upload (existing)
}

type ExtractRequest_S3Ref struct {
	S3Ref *S3Reference `protobuf:"bytes,3,opt,name=s3_ref,json=s3Ref,proto3,oneof"` // S3 object reference (new)
}

func (*ExtractRequest_File) isExtractRequest_Source() {}

func (*ExtractRequest_S3Ref) isExtractRequest_Source() {}

type ExtractResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtractResponse) Reset() {
	*x = ExtractResponse{}
	mi := &file_clausia_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractResponse) ProtoMessage() {}

func (x *ExtractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clausia_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractResponse.ProtoReflect.Descriptor instead.
func (*ExtractResponse) Descriptor() ([]byte, []int) {
	return file_clausia_proto_rawDescGZIP(), []int{4}
}

func (x *ExtractResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type ExtractMetadataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      string                 `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"` // JSON string of grouped metadata
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`   // OCR full text in RTF
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtractMetadataResponse) Reset() {
	*x = ExtractMetadataResponse{}
	mi := &file_clausia_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtractMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractMetadataResponse) ProtoMessage() {}

func (x *ExtractMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clausia_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractMetadataResponse.ProtoReflect.Descriptor instead.
func (*ExtractMetadataResponse) Descriptor() ([]byte, []int) {
	return file_clausia_proto_rawDescGZIP(), []int{5}
}

func (x *ExtractMetadataResponse) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *ExtractMetadataResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type SummarizeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContractId    string                 `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"` // ID kontrak untuk mengambil content dari database
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SummarizeRequest) Reset() {
	*x = SummarizeRequest{}
	mi := &file_clausia_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummarizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummarizeRequest) ProtoMessage() {}

func (x *SummarizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clausia_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummarizeRequest.ProtoReflect.Descriptor instead.
func (*SummarizeRequest) Descriptor() ([]byte, []int) {
	return file_clausia_proto_rawDescGZIP(), []int{6}
}

func (x *SummarizeRequest) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

type SummarizeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Summary       string                 `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SummarizeResponse) Reset() {
	*x = SummarizeResponse{}
	mi := &file_clausia_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummarizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummarizeResponse) ProtoMessage() {}

func (x *SummarizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clausia_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummarizeResponse.ProtoReflect.Descriptor instead.
func (*SummarizeResponse) Descriptor() ([]byte, []int) {
	return file_clausia_proto_rawDescGZIP(), []int{7}
}

func (x *SummarizeResponse) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

type RiskFinding struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClauseText    string                 `protobuf:"bytes,1,opt,name=clause_text,json=clauseText,proto3" json:"clause_text,omitempty"`
	RiskType      string                 `protobuf:"bytes,2,opt,name=risk_type,json=riskType,proto3" json:"risk_type,omitempty"`
	Severity      string                 `protobuf:"bytes,3,opt,name=severity,proto3" json:"severity,omitempty"` // Low, Medium, High
	Rationale     string                 `protobuf:"bytes,4,opt,name=rationale,proto3" json:"rationale,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RiskFinding) Reset() {
	*x = RiskFinding{}
	mi := &file_clausia_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskFinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskFinding) ProtoMessage() {}

func (x *RiskFinding) ProtoReflect() protoreflect.Message {
	mi := &file_clausia_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskFinding.ProtoReflect.Descriptor instead.
func (*RiskFinding) Descriptor() ([]byte, []int) {
	return file_clausia_proto_rawDescGZIP(), []int{8}
}

func (x *RiskFinding) GetClauseText() string {
	if x != nil {
		return x.ClauseText
	}
	return ""
}

func (x *RiskFinding) GetRiskType() string {
	if x != nil {
		return x.RiskType
	}
	return ""
}

func (x *RiskFinding) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *RiskFinding) GetRationale() string {
	if x != nil {
		return x.Rationale
	}
	return ""
}

type AnalyzeRiskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Findings      []*RiskFinding         `protobuf:"bytes,1,rep,name=findings,proto3" json:"findings,omitempty"`
	Low           int32                  `protobuf:"varint,2,opt,name=low,proto3" json:"low,omitempty"`
	Medium        int32                  `protobuf:"varint,3,opt,name=medium,proto3" json:"medium,omitempty"`
	High          int32                  `protobuf:"varint,4,opt,name=high,proto3" json:"high,omitempty"`
	RiskLevel     int32                  `protobuf:"varint,5,opt,name=risk_level,json=riskLevel,proto3" json:"risk_level,omitempty"` // 1=Low, 2=Medium, 3=High (overall assessment)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzeRiskResponse) Reset() {
	*x = AnalyzeRiskResponse{}
	mi := &file_clausia_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeRiskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeRiskResponse) ProtoMessage() {}

func (x *AnalyzeRiskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clausia_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeRiskResponse.ProtoReflect.Descriptor instead.
func (*AnalyzeRiskResponse) Descriptor() ([]byte, []int) {
	return file_clausia_proto_rawDescGZIP(), []int{9}
}

func (x *AnalyzeRiskResponse) GetFindings() []*RiskFinding {
	if x != nil {
		return x.Findings
	}
	return nil
}

func (x *AnalyzeRiskResponse) GetLow() int32 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *AnalyzeRiskResponse) GetMedium() int32 {
	if x != nil {
		return x.Medium
	}
	return 0
}

func (x *AnalyzeRiskResponse) GetHigh() int32 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *AnalyzeRiskResponse) GetRiskLevel() int32 {
	if x != nil {
		return x.RiskLevel
	}
	return 0
}

type ComplianceMatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PolicyId      string                 `protobuf:"bytes,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	PolicyName    string                 `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"` // Compliant / Partial / Non-compliant
	Evidence      string                 `protobuf:"bytes,4,opt,name=evidence,proto3" json:"evidence,omitempty"`
	Note          string                 `protobuf:"bytes,5,opt,name=note,proto3" json:"note,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComplianceMatch) Reset() {
	*x = ComplianceMatch{}
	mi := &file_clausia_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceMatch) ProtoMessage() {}

func (x *ComplianceMatch) ProtoReflect() protoreflect.Message {
	mi := &file_clausia_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceMatch.ProtoReflect.Descriptor instead.
func (*ComplianceMatch) Descriptor() ([]byte, []int) {
	return file_clausia_proto_rawDescGZIP(), []int{10}
}

func (x *ComplianceMatch) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (x *ComplianceMatch) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *ComplianceMatch) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ComplianceMatch) GetEvidence() string {
	if x != nil {
		return x.Evidence
	}
	return ""
}

func (x *ComplianceMatch) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type CheckComplianceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Matches       []*ComplianceMatch     `protobuf:"bytes,1,rep,name=matches,proto3" json:"matches,omitempty"`
	Compliant     int32                  `protobuf:"varint,2,opt,name=compliant,proto3" json:"compliant,omitempty"`
	Partial       int32                  `protobuf:"varint,3,opt,name=partial,proto3" json:"partial,omitempty"`
	NonCompliant  int32                  `protobuf:"varint,4,opt,name=non_compliant,json=nonCompliant,proto3" json:"non_compliant,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckComplianceResponse) Reset() {
	*x = CheckComplianceResponse{}
	mi := &file_clausia_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckComplianceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckComplianceResponse) ProtoMessage() {}

func (x *CheckComplianceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clausia_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckComplianceResponse.ProtoReflect.Descriptor instead.
func (*CheckComplianceResponse) Descriptor() ([]byte, []int) {
	return file_clausia_proto_rawDescGZIP(), []int{11}
}

func (x *CheckComplianceResponse) GetMatches() []*ComplianceMatch {
	if x != nil {
		return x.Matches
	}
	return nil
}

func (x *CheckComplianceResponse) GetCompliant() int32 {
	if x != nil {
		return x.Compliant
	}
	return 0
}

func (x *CheckComplianceResponse) GetPartial() int32 {
	if x != nil {
		return x.Partial
	}
	return 0
}

func (x *CheckComplianceResponse) GetNonCompliant() int32 {
	if x != nil {
		return x.NonCompliant
	}
	return 0
}

type ChatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContractId    string                 `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"` // ID kontrak untuk mengambil content dari database
	Question      string                 `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	SessionId     string                 `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // maintain chat session across turns
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatRequest) Reset() {
	*x = ChatRequest{}
	mi := &file_clausia_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatRequest) ProtoMessage() {}

func (x *ChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clausia_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatRequest.ProtoReflect.Descriptor instead.
func (*ChatRequest) Descriptor() ([]byte, []int) {
	return file_clausia_proto_rawDescGZIP(), []int{12}
}

func (x *ChatRequest) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

func (x *ChatRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *ChatRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type ChatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Answer        string                 `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatResponse) Reset() {
	*x = ChatResponse{}
	mi := &file_clausia_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatResponse) ProtoMessage() {}

func (x *ChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clausia_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatResponse.ProtoReflect.Descriptor instead.
func (*ChatResponse) Descriptor() ([]byte, []int) {
	return file_clausia_proto_rawDescGZIP(), []int{13}
}

func (x *ChatResponse) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

var File_clausia_proto protoreflect.FileDescriptor

const file_clausia_proto_rawDesc = "" +
	"\n" +
	"\rclausia.proto\x12\aclausia\"=\n" +
	"\vFileContent\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\",\n" +
	"\vS3Reference\x12\x1d\n" +
	"\n" +
	"object_key\x18\x01 \x01(\tR\tobjectKey\"\x8e\x01\n" +
	"\tOCRParams\x12\x12\n" +
	"\x04lang\x18\x01 \x01(\tR\x04lang\x12\x10\n" +
	"\x03dpi\x18\x02 \x01(\x05R\x03dpi\x12\x10\n" +
	"\x03oem\x18\x03 \x01(\x05R\x03oem\x12\x10\n" +
	"\x03psm\x18\x04 \x01(\x05R\x03psm\x12\x1b\n" +
	"\tmax_pages\x18\x05 \x01(\x05R\bmaxPages\x12\x1a\n" +
	"\bparallel\x18\x06 \x01(\bR\bparallel\"u\n" +
	"\x0eExtractRequest\x12*\n" +
	"\x04file\x18\x01 \x01(\v2\x14.clausia.FileContentH\x00R\x04file\x12-\n" +
	"\x06s3_ref\x18\x03 \x01(\v2\x14.clausia.S3ReferenceH\x00R\x05s3RefB\b\n" +
	"\x06source\"%\n" +
	"\x0fExtractResponse\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\"O\n" +
	"\x17ExtractMetadataResponse\x12\x1a\n" +
	"\bmetadata\x18\x01 \x01(\tR\bmetadata\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\"3\n" +
	"\x10SummarizeRequest\x12\x1f\n" +
	"\vcontract_id\x18\x01 \x01(\tR\n" +
	"contractId\"-\n" +
	"\x11SummarizeResponse\x12\x18\n" +
	"\asummary\x18\x01 \x01(\tR\asummary\"\x85\x01\n" +
	"\vRiskFinding\x12\x1f\n" +
	"\vclause_text\x18\x01 \x01(\tR\n" +
	"clauseText\x12\x1b\n" +
	"\trisk_type\x18\x02 \x01(\tR\briskType\x12\x1a\n" +
	"\bseverity\x18\x03 \x01(\tR\bseverity\x12\x1c\n" +
	"\trationale\x18\x04 \x01(\tR\trationale\"\xa4\x01\n" +
	"\x13AnalyzeRiskResponse\x120\n" +
	"\bfindings\x18\x01 \x03(\v2\x14.clausia.RiskFindingR\bfindings\x12\x10\n" +
	"\x03low\x18\x02 \x01(\x05R\x03low\x12\x16\n" +
	"\x06medium\x18\x03 \x01(\x05R\x06medium\x12\x12\n" +
	"\x04high\x18\x04 \x01(\x05R\x04high\x12\x1d\n" +
	"\n" +
	"risk_level\x18\x05 \x01(\x05R\triskLevel\"\x97\x01\n" +
	"\x0fComplianceMatch\x12\x1b\n" +
	"\tpolicy_id\x18\x01 \x01(\tR\bpolicyId\x12\x1f\n" +
	"\vpolicy_name\x18\x02 \x01(\tR\n" +
	"policyName\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x1a\n" +
	"\bevidence\x18\x04 \x01(\tR\bevidence\x12\x12\n" +
	"\x04note\x18\x05 \x01(\tR\x04note\"\xaa\x01\n" +
	"\x17CheckComplianceResponse\x122\n" +
	"\amatches\x18\x01 \x03(\v2\x18.clausia.ComplianceMatchR\amatches\x12\x1c\n" +
	"\tcompliant\x18\x02 \x01(\x05R\tcompliant\x12\x18\n" +
	"\apartial\x18\x03 \x01(\x05R\apartial\x12#\n" +
	"\rnon_compliant\x18\x04 \x01(\x05R\fnonCompliant\"i\n" +
	"\vChatRequest\x12\x1f\n" +
	"\vcontract_id\x18\x01 \x01(\tR\n" +
	"contractId\x12\x1a\n" +
	"\bquestion\x18\x02 \x01(\tR\bquestion\x12\x1d\n" +
	"\n" +
	"session_id\x18\x03 \x01(\tR\tsessionId\"&\n" +
	"\fChatResponse\x12\x16\n" +
	"\x06answer\x18\x01 \x01(\tR\x06answer2\xa2\x03\n" +
	"\aClausIA\x12<\n" +
	"\aExtract\x12\x17.clausia.ExtractRequest\x1a\x18.clausia.ExtractResponse\x12L\n" +
	"\x0fExtractMetadata\x12\x17.clausia.ExtractRequest\x1a .clausia.ExtractMetadataResponse\x12B\n" +
	"\tSummarize\x12\x19.clausia.SummarizeRequest\x1a\x1a.clausia.SummarizeResponse\x12D\n" +
	"\vAnalyzeRisk\x12\x17.clausia.ExtractRequest\x1a\x1c.clausia.AnalyzeRiskResponse\x12L\n" +
	"\x0fCheckCompliance\x12\x17.clausia.ExtractRequest\x1a .clausia.CheckComplianceResponse\x123\n" +
	"\x04Chat\x12\x14.clausia.ChatRequest\x1a\x15.clausia.ChatResponseB9Z7github.com/Clausia-Ifest/clausia-server/proto;clausiapbb\x06proto3"

var (
	file_clausia_proto_rawDescOnce sync.Once
	file_clausia_proto_rawDescData []byte
)

func file_clausia_proto_rawDescGZIP() []byte {
	file_clausia_proto_rawDescOnce.Do(func() {
		file_clausia_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_clausia_proto_rawDesc), len(file_clausia_proto_rawDesc)))
	})
	return file_clausia_proto_rawDescData
}

var file_clausia_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_clausia_proto_goTypes = []any{
	(*FileContent)(nil),             // 0: clausia.FileContent
	(*S3Reference)(nil),             // 1: clausia.S3Reference
	(*OCRParams)(nil),               // 2: clausia.OCRParams
	(*ExtractRequest)(nil),          // 3: clausia.ExtractRequest
	(*ExtractResponse)(nil),         // 4: clausia.ExtractResponse
	(*ExtractMetadataResponse)(nil), // 5: clausia.ExtractMetadataResponse
	(*SummarizeRequest)(nil),        // 6: clausia.SummarizeRequest
	(*SummarizeResponse)(nil),       // 7: clausia.SummarizeResponse
	(*RiskFinding)(nil),             // 8: clausia.RiskFinding
	(*AnalyzeRiskResponse)(nil),     // 9: clausia.AnalyzeRiskResponse
	(*ComplianceMatch)(nil),         // 10: clausia.ComplianceMatch
	(*CheckComplianceResponse)(nil), // 11: clausia.CheckComplianceResponse
	(*ChatRequest)(nil),             // 12: clausia.ChatRequest
	(*ChatResponse)(nil),            // 13: clausia.ChatResponse
}
var file_clausia_proto_depIdxs = []int32{
	0,  // 0: clausia.ExtractRequest.file:type_name -> clausia.FileContent
	1,  // 1: clausia.ExtractRequest.s3_ref:type_name -> clausia.S3Reference
	8,  // 2: clausia.AnalyzeRiskResponse.findings:type_name -> clausia.RiskFinding
	10, // 3: clausia.CheckComplianceResponse.matches:type_name -> clausia.ComplianceMatch
	3,  // 4: clausia.ClausIA.Extract:input_type -> clausia.ExtractRequest
	3,  // 5: clausia.ClausIA.ExtractMetadata:input_type -> clausia.ExtractRequest
	6,  // 6: clausia.ClausIA.Summarize:input_type -> clausia.SummarizeRequest
	3,  // 7: clausia.ClausIA.AnalyzeRisk:input_type -> clausia.ExtractRequest
	3,  // 8: clausia.ClausIA.CheckCompliance:input_type -> clausia.ExtractRequest
	12, // 9: clausia.ClausIA.Chat:input_type -> clausia.ChatRequest
	4,  // 10: clausia.ClausIA.Extract:output_type -> clausia.ExtractResponse
	5,  // 11: clausia.ClausIA.ExtractMetadata:output_type -> clausia.ExtractMetadataResponse
	7,  // 12: clausia.ClausIA.Summarize:output_type -> clausia.SummarizeResponse
	9,  // 13: clausia.ClausIA.AnalyzeRisk:output_type -> clausia.AnalyzeRiskResponse
	11, // 14: clausia.ClausIA.CheckCompliance:output_type -> clausia.CheckComplianceResponse
	13, // 15: clausia.ClausIA.Chat:output_type -> clausia.ChatResponse
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_clausia_proto_init() }
func file_clausia_proto_init() {
	if File_clausia_proto != nil {
		return
	}
	file_clausia_proto_msgTypes[3].OneofWrappers = []any{
		(*ExtractRequest_File)(nil),
		(*ExtractRequest_S3Ref)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_clausia_proto_rawDesc), len(file_clausia_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_clausia_proto_goTypes,
		DependencyIndexes: file_clausia_proto_depIdxs,
		MessageInfos:      file_clausia_proto_msgTypes,
	}.Build()
	File_clausia_proto = out.File
	file_clausia_proto_goTypes = nil
	file_clausia_proto_depIdxs = nil
}
